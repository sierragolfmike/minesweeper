#BlueJ class context
comment0.target=Minesweeper
comment0.text=\n\ The\ Minesweeper\ class\ represents\ a\ game\ of\ Minesweeper.\n\ It\ manages\ the\ game\ board,\ player\ board,\ game\ size,\ lives,\ move\ history,\ and\ game\ state.\n\ The\ class\ provides\ methods\ for\ initializing\ a\ new\ game,\ making\ moves,\ checking\ for\ a\ win\ or\ loss,\ and\ saving/loading\ the\ game\ state.\n\ \n\ @author\ Samuel\ McCalarence\n\ @version\ 1.8\n
comment1.params=
comment1.target=Minesweeper()
comment1.text=\n\ The\ Minesweeper\ class\ represents\ a\ game\ of\ Minesweeper.\n\ It\ initialises\ a\ new\ game\ and\ keeps\ track\ of\ the\ move\ history.\n
comment10.params=row\ col
comment10.target=java.lang.String\ getCellState(int,\ int)
comment10.text=\n\ Retrieves\ the\ state\ of\ the\ cell\ at\ the\ specified\ row\ and\ column.\n\n\ @param\ row\ the\ row\ index\ of\ the\ cell\n\ @param\ col\ the\ column\ index\ of\ the\ cell\n\ @return\ the\ state\ of\ the\ cell\ at\ the\ specified\ row\ and\ column\n
comment11.params=
comment11.target=void\ clearGame()
comment11.text=\n\ Clears\ the\ game\ by\ reinitializing\ it,\ resetting\ the\ number\ of\ lives,\ and\ clearing\ the\ move\ history.\n
comment12.params=
comment12.target=boolean\ undoMove()
comment12.text=\n\ Undoes\ the\ last\ move\ made\ by\ the\ player.\n\ If\ there\ are\ moves\ in\ the\ move\ history,\ the\ last\ move\ is\ removed\ and\ the\ state\ of\ the\ board\ at\ the\ specified\ row\ and\ column\ is\ set\ to\ "?".\n\ If\ the\ move\ history\ is\ empty,\ no\ move\ is\ undone.\n\ \n\ @return\ true\ if\ a\ move\ was\ undone,\ false\ otherwise\n
comment13.params=filename
comment13.target=void\ saveGame(java.lang.String)
comment13.text=\n\ Saves\ the\ current\ game\ state\ to\ a\ file.\n\ \n\ @param\ filename\ the\ name\ of\ the\ file\ to\ save\ the\ game\ to\n
comment14.params=filename
comment14.target=void\ loadGame(java.lang.String)
comment14.text=\n\ Loads\ a\ game\ from\ a\ specified\ file.\n\n\ @param\ filename\ the\ name\ of\ the\ file\ to\ load\ the\ game\ from\n
comment15.params=
comment15.target=int\ getLives()
comment15.text=\n\ Returns\ the\ number\ of\ lives\ remaining.\n\n\ @return\ the\ number\ of\ lives\ remaining\n
comment2.params=
comment2.target=void\ initialiseNewGame()
comment2.text=\n\ Initialises\ a\ new\ game\ of\ Minesweeper.\n\ Reads\ the\ level\ file,\ calculates\ the\ game\ size,\ and\ initialises\ the\ game\ board\ and\ player\ board.\n\ \n\ @throws\ FileNotFoundException\ if\ the\ level\ file\ is\ not\ found\n\ @throws\ Exception\ if\ there\ is\ an\ error\ initialising\ the\ new\ game\n
comment3.params=
comment3.target=Slot[][]\ getMoves()
comment3.text=\n\ Returns\ the\ current\ state\ of\ the\ player's\ board.\n\n\ @return\ a\ 2D\ array\ representing\ the\ player's\ board\n
comment4.params=row\ col
comment4.target=java.lang.String\ getIndividualMove(int,\ int)
comment4.text=\n\ Retrieves\ the\ state\ of\ an\ individual\ cell\ on\ the\ player\ board\ at\ the\ specified\ row\ and\ column.\n\ \n\ @param\ row\ the\ row\ index\ of\ the\ cell\n\ @param\ col\ the\ column\ index\ of\ the\ cell\n\ @return\ the\ state\ of\ the\ cell\ at\ the\ specified\ row\ and\ column\n\ @throws\ IndexOutOfBoundsException\ if\ the\ row\ or\ column\ index\ is\ invalid\n
comment5.params=
comment5.target=int\ calculateGameSize()
comment5.text=\n\ Calculates\ the\ game\ size\ based\ on\ the\ input\ file.\n\ \n\ @return\ the\ game\ size\ as\ an\ integer\n
comment6.params=
comment6.target=int\ getGameSize()
comment6.text=\n\ Returns\ the\ size\ of\ the\ game.\n\n\ @return\ the\ size\ of\ the\ game\n
comment7.params=
comment7.target=java.lang.String[][]\ readLevelFile()
comment7.text=\n\ Reads\ the\ level\ file\ and\ populates\ the\ game\ board\ and\ player\ board\ arrays.\n\ \n\ @return\ The\ game\ board\ array\ after\ reading\ the\ level\ file.\n
comment8.params=
comment8.target=java.lang.String\ checkWin()
comment8.text=\n\ Checks\ if\ the\ player\ has\ won\ the\ game.\n\ \n\ @return\ "continue"\ if\ the\ game\ is\ still\ ongoing,\n\ \ \ \ \ \ \ \ \ "won"\ if\ the\ player\ has\ won\ the\ game,\n\ \ \ \ \ \ \ \ \ "lives"\ if\ the\ player\ has\ lost\ all\ lives.\n
comment9.params=row\ col\ guess
comment9.target=java.lang.String\ makeMove(int,\ int,\ java.lang.String)
comment9.text=\n\ Makes\ a\ move\ in\ the\ Minesweeper\ game\ at\ the\ specified\ row\ and\ column\ with\ the\ given\ guess.\n\ Updates\ the\ move\ history\ and\ player\ board\ accordingly.\n\ \n\ @param\ row\ \ \ the\ row\ index\ of\ the\ move\n\ @param\ col\ \ \ the\ column\ index\ of\ the\ move\n\ @param\ guess\ the\ guess\ made\ by\ the\ player\ ("M"\ for\ mine,\ "G"\ for\ guess)\n\ @return\ a\ message\ indicating\ the\ result\ of\ the\ move\n
numComments=16
